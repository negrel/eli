FROM docker.io/library/archlinux:latest

ARG ELI_INTEL_UCODE=y
ARG ELI_AMD_UCODE=y
ARG TZ=Etc/UTC
ARG KEYMAP=fr
ARG ROOT_PASSWD=""

ENV ELI_IMAGE=archlinux

# Install packages required for an install
RUN pacman -Syu --needed --noconfirm --hookdir $(mktemp -d)\
  dracut \
  squashfs-tools \
  grub \
  libisoburn \
  mtools \
  linux \
  linux-firmware \
  && pacman -Scc

RUN rm -rf /boot/grub*

# Microcode
RUN if [ "$ELI_INTEL_UCODE" = "y" ]; then \
    pacman -S --needed --noconfirm intel-ucode; \
  fi
RUN if [ "$ELI_AMD_UCODE" = "y" ]; then \
    pacman -S --needed --noconfirm amd-ucode; \
  fi

# Set timezone
RUN ln -sf "/usr/share/zoneinfo/$TZ" /etc/localtime

# Keyboard layout
RUN echo "KEYMAP=$KEYMAP" > /etc/vconsole.conf

# Remove NoExtract from pacman conf
RUN sed -i -E 's|^NoExtract\s+=\s+.*$||' /etc/pacman.conf

# Patch grub so we can specify GRUB_DEVICE and GRUB_DEVICE_BOOT from command line
RUN sed -i -E 's|^GRUB_DEVICE=(.+)$|GRUB_DEVICE=${GRUB_DEVICE-\1}|g' $(command -v grub-mkconfig)
RUN sed -i -E 's|^GRUB_DEVICE_BOOT=(.+)$|GRUB_DEVICE_BOOT=${GRUB_DEVICE_BOOT-\1}|g' $(command -v grub-mkconfig)

# Remove root password
RUN usermod -p "$ROOT_PASSWD" root

# /eli directory structure
RUN mkdir -p \
  /eli \
  /eli/scripts

# Add dracut configuration
COPY ./distributions/archlinux/dracut.conf /etc/dracut.conf.d/99-eli.conf

# Add scripts
COPY ./scripts/initramfs/dracut/mkinitramfs /eli/scripts/mkinitramfs
COPY ./scripts/common/ /eli/scripts/

# Link kernel to /boot/vmlinuz-*
RUN ln /usr/lib/modules/$(/eli/scripts/kver)/vmlinuz /boot/vmlinuz-$(/eli/scripts/kver)

# Create /etc/machine-id so we can use systemd as entrypoint
# RUN dbus-uuidgen --ensure=/etc/machine-id
